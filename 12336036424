--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v25=function()local v39=v24();local v40=v24();local v41=1;local v42=(v21(v40,4 -(12 -9) ,19 + 1 ) * ((2 + 0)^32)) + v39 ;local v43=v21(v40,684 -(34 + 629) ,11 + 20 );local v44=((v21(v40,1954 -(32 + 1890) )==(1483 -(192 + 1290))) and  -(3 -2)) or (1 + 0) ;if (v43==(1178 -((2785 -(605 + 1376)) + 374))) then if (v42==(0 -0)) then return v44 * (1292 -(456 + 836)) ;else v43=(2 -1) + 0 ;v41=466 -(197 + 269) ;end elseif (v43==(5590 -3543)) then return ((v42==(0 -0)) and (v44 * (((13 -9) -3)/(0 + 0)))) or (v44 * NaN) ;end return v8(v44,v43-1023 ) * (v41 + (v42/((1 + 1)^(121 -69)))) ;end;v26=nil;v26=function(v31)local v45=1450 -(949 + 501) ;local v46;local v47;while true do if (v45==((941 -(813 + 125)) -2)) then v46=v3(v16,v19,(v19 + v31) -(1 + 0) );v19=v19 + v31 ;v45=5 -3 ;end if (v45==2) then v47={};for v89=1 + 0 , #v46 do v47[v89]=v2(v1(v3(v46,v89,v89)));end v45=(7 + 1) -5 ;end if (v45==(1 + (5 -3))) then return v6(v47);end if (v45==((2180 -(634 + 99)) -(317 + 1130))) then v46=nil;if  not v31 then v31=v24();if (v31==(1573 -(407 + 1166))) then return "";end end v45=3 -2 ;end end end;v27=v24;v18=4;end if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v48==(1 + 0)) then v51=nil;v52=nil;v48=6 -4 ;end if (v48==0) then v49=0 + 0 ;v50=nil;v48=1;end if (v48==3) then v55=nil;v56=nil;v48=4;end if (v48==(4 -2)) then v53=nil;v54=nil;v48=8 -5 ;end if (v48==(746 -(133 + 609))) then while true do if (v49==3) then v56=nil;while true do local v99=1455 -(329 + 1126) ;local v100;local v101;while true do if (v99==(0 + 0)) then v100=0;v101=nil;v99=1 + 0 ;end if (1==v99) then while true do if (v100==(0 + 0)) then v101=156 -(114 + 42) ;while true do if (v101==(1 + 0)) then if (v50~=(1 -0)) then else local v180=0;while true do if (v180==2) then v50=2;break;end if (v180==0) then local v204=0;local v205;while true do if (v204~=(703 -(157 + 546))) then else v205=1550 -(1385 + 165) ;while true do if (v205~=1) then else v180=1993 -(297 + 1695) ;break;end if (v205~=0) then else v55=v24();v56={};v205=1;end end break;end end end if ((1 -0)~=v180) then else for v210=1,v55 do local v211=0;local v212;local v213;local v214;while true do if (v211==(0 + 0)) then v212=0;v213=nil;v211=1738 -(1091 + 646) ;end if (v211==(1 + 0)) then v214=nil;while true do if (v212~=0) then else local v266=982 -(825 + 157) ;while true do if (v266==0) then v213=v22();v214=nil;v266=1723 -(870 + 852) ;end if (v266==1) then v212=1 -0 ;break;end end end if (v212==1) then if (v213==1) then v214=v22()~=(0 + 0) ;elseif (v213==(1843 -(634 + 1207))) then v214=v25();elseif (v213==3) then v214=v26();end v56[v210]=v214;break;end end break;end end end v54[3]=v22();v180=2;end end end break;end if ((0 -0)==v101) then local v107=828 -(130 + 698) ;while true do if (v107==(1524 -(616 + 908))) then if (v50==(1761 -(760 + 999))) then local v207=0;while true do local v215=0 -0 ;while true do if (0~=v215) then else if (v207==(0 -0)) then for v268=1,v24() do local v269=0 + 0 ;local v270;local v271;local v272;local v273;while true do if (1~=v269) then else v272=nil;v273=nil;v269=1 + 1 ;end if (2==v269) then while true do if (v270~=0) then else v271=0;v272=nil;v270=1;end if (v270~=1) then else v273=nil;while true do if (v271~=(1 + 0)) then else while true do if (v272==0) then v273=v22();if (v21(v273,1,1200 -(435 + 764) )~=(0 + 0)) then else local v317=0;local v318;local v319;local v320;local v321;while true do if (v317~=1) then else v320=nil;v321=nil;v317=3 -1 ;end if (v317==0) then local v323=1921 -(930 + 991) ;while true do if (v323==1) then v317=1;break;end if (v323==0) then v318=0;v319=nil;v323=1;end end end if ((1811 -(1755 + 54))~=v317) then else while true do if (v318==(0 -0)) then v319=v21(v273,1 + 1 ,3);v320=v21(v273,4,6);v318=1 -0 ;end if (v318==(1 -0)) then local v329=375 -(136 + 239) ;while true do if (v329==(616 -(374 + 242))) then v321={v23(),v23(),nil,nil};if (v319==0) then local v334=0;local v335;while true do if (v334==0) then v335=0 -0 ;while true do if (v335==0) then v321[3]=v23();v321[4]=v23();break;end end break;end end elseif (v319==(1216 -(1044 + 171))) then v321[3]=v24();elseif (v319==(6 -4)) then v321[3]=v24() -(2^16) ;elseif (v319==3) then local v344=0;local v345;local v346;while true do if (v344==(1 + 0)) then while true do if (v345~=0) then else v346=0;while true do if (v346==0) then v321[3]=v24() -((6 -4)^(45 -(17 + 12))) ;v321[4 + 0 ]=v23();break;end end break;end end break;end if (v344==(282 -(235 + 47))) then v345=0 -0 ;v346=nil;v344=2 -1 ;end end end v329=272 -(251 + 20) ;end if (v329~=(1036 -(1030 + 5))) then else v318=1 + 1 ;break;end end end if (v318~=(5 -3)) then else local v330=0;while true do if (v330==(3 -2)) then v318=3;break;end if (v330==0) then if (v21(v320,801 -(103 + 697) ,1)~=(1 -0)) then else v321[2]=v56[v321[2]];end if (v21(v320,434 -(53 + 379) ,1909 -(324 + 1583) )~=(1 -0)) then else v321[3]=v56[v321[3 + 0 ]];end v330=1;end end end if (v318==3) then if (v21(v320,1440 -(318 + 1119) ,3)==(1 -0)) then v321[1932 -(1234 + 694) ]=v56[v321[4]];end v51[v268]=v321;break;end end break;end end end break;end end break;end if (v271==0) then local v312=958 -(434 + 524) ;while true do if (1==v312) then v271=132 -(21 + 110) ;break;end if (v312~=(0 + 0)) then else v272=0;v273=nil;v312=1;end end end end break;end end break;end if (v269==(0 -0)) then v270=0;v271=nil;v269=778 -(767 + 10) ;end end end for v274=1,v24() do v52[v274-1 ]=v29();end v207=1;end if (v207==(2 -1)) then local v257=0;local v258;while true do if (v257~=(1913 -(861 + 1052))) then else v258=198 -(155 + 43) ;while true do if (v258==(12 -(4 + 8))) then for v305=1389 -(1084 + 304) ,v24() do v53[v305]=v24();end return v54;end end break;end end end break;end end end end if (0==v50) then local v208=0 -0 ;local v209;while true do if (0==v208) then v209=0;while true do if (v209==1) then local v259=0;local v260;while true do if (v259==(0 + 0)) then v260=0;while true do if (v260~=(0 -0)) then else local v303=0;while true do if (v303==(1 + 0)) then v260=1654 -(1605 + 48) ;break;end if (v303==0) then v53={};v54={v51,v52,nil,v53};v303=2 -1 ;end end end if (v260==(1 + 0)) then v209=3 -1 ;break;end end break;end end end if (v209==0) then v51={};v52={};v209=1 -0 ;end if (v209==2) then v50=2 -1 ;break;end end break;end end end v107=1 + 0 ;end if (v107==1) then v101=2 -1 ;break;end end end end break;end end break;end end end break;end if ((9 -7)~=v49) then else local v95=20 -(12 + 8) ;while true do if (v95~=1) then else v49=12 -9 ;break;end if (v95~=(821 -(185 + 636))) then else v54=nil;v55=nil;v95=1205 -(829 + 375) ;end end end if (v49~=0) then else v50=0 -0 ;v51=nil;v49=1;end if (v49~=1) then else local v96=0 -0 ;local v97;while true do if (v96~=(0 -0)) then else v97=1321 -(842 + 479) ;while true do if (v97==0) then local v106=0;while true do if (v106~=1) then else v97=1;break;end if ((0 -0)==v106) then v52=nil;v53=nil;v106=3 -2 ;end end end if (v97==(1 + 0)) then v49=2 + 0 ;break;end end break;end end end end break;end end end;v18=5;end if (5==v18) then v30=nil;v30=function(v32,v33,v34)local v57=v32[1];local v58=v32[2];local v59=v32[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v72=v57;local v73=v58;local v74=v59;local v75=v28;local v76={};local v77={};local v78={};for v86=0,v70 do if ((((1016 + 7635) -5319)>=(506 + (3067 -2087))) and (v86>=v74)) then v76[v86-v74 ]=v69[v86 + 1 + 0 ];else v78[v86]=v69[v86 + 1 ];end end local v79=(v70-v74) + 1 ;local v80;local v81;while true do local v87=0 + 0 ;while true do if (((1323 -(747 + 517))<=(3983 -2292)) and (1==v87)) then if (((1901 -1030)>=(680 + 59)) and (v81<=(41 -(20 + 6)))) then if ((v81<=(1 + 6)) or ((1474 + 440)==(7860 -3564))) then if ((v81<=(2 + 1 + 0)) or ((768 + 3898)<(2953 -(1838 + 24)))) then if ((((2584 -(504 + 174)) -905)==1001) and (v81<=((804 + 401) -(262 + 942)))) then if (((48 + 2594)>(3080 -(562 + 142 + 237))) and (v81>0)) then v78[v80[(4 -2) + 0 + 0 ]][v80[1088 -(60 + 1025) ]]=v80[4 + 0 ];elseif (((3550 -(492 + 39))==(3740 -(316 + 405))) and (v78[v80[3 -1 ]]==v80[3 + 1 ])) then v67=v67 + (2 -1) ;else v67=v80[1027 -(305 + 719) ];end elseif (((4320 -(647 + 209))>1559) and (v81>(1 + 1))) then local v110=1435 -(2 + 732 + 701) ;local v111;local v112;local v113;local v114;while true do if (((1 + 1)==v110) or (4711<(2192 + 450))) then while true do if (((2895 -(715 + 415 + 75))<=3026) and (v111==(2 -1))) then v114=0;for v229=v112,v80[1369 -(443 + 922) ] do local v230=0;local v231;while true do if ((v230==(810 -(366 + (1759 -1315)))) or ((189 + 455)>=(4639 -(498 + 1033)))) then v231=0 -0 ;while true do if (((0 -0)==v231) or ((11120 -7548)<(2432 -(304 + 59)))) then v114=v114 + 1 + 0 ;v78[v229]=v113[v114];break;end end break;end end end break;end if (((219 + 1165)>((8500 -5309) -(1451 + 503))) and (v111==(708 -(132 + 576)))) then local v216=0 -0 ;while true do if ((v216==(903 -(553 + 349))) or ((1612 + 1784)<=(130 + 289))) then v111=1;break;end if ((v216==(0 + (1743 -(1153 + 590)))) or (2129>(185 + 2702))) then v112=v80[609 -(346 + 261) ];v113={v78[v112](v13(v78,v112 + 1 ,v68))};v216=634 -((887 -(445 + 257)) + 448) ;end end end end break;end if ((v110==((0 -0) + 0)) or (4868<=(2543 -1847))) then v111=0 -0 ;v112=nil;v110=1 -0 ;end if (((1677 -(783 + 55))<=(1161 + 513)) and (v110==1)) then v113=nil;v114=nil;v110=2;end end else local v115=0 + 0 ;local v116;local v117;local v118;while true do if (((1967 -(29 + 205))<=4208) and (v115==(1431 -(1274 + 157)))) then v116=0 + 0 ;v117=nil;v115=1321 -(1107 + 213) ;end if ((v115==((2 -1) + 0)) or (((8080 -(790 + 1000)) -(1568 + 293))<=(1594 + 143))) then v118=nil;while true do if (((0 + 0)==v116) or ((2829 -2039)>(2022 -(47 + 494)))) then v117=v80[1 + 1 ];v118={};v116=1 -0 ;end if (((4655 -(301 + 1115))>=1717) and (1==v116)) then for v232=394 -(194 + (439 -240)) , #v77 do local v233=0 + 0 ;local v234;local v235;while true do if (((2715 + 2097)>=(13045 -9186)) and (v233==0)) then v234=309 -(86 + (848 -625)) ;v235=nil;v233=1541 -(738 + (2764 -(1067 + 895))) ;end if ((1==v233) or ((6417 -3055)<=(17 + 28 + 935))) then while true do if (((1988 -(1380 + 300))<(11070 -7543)) and ((0 -0)==v234)) then v235=v77[v232];for v292=353 -(76 + 277) , #v235 do local v293=0;local v294;local v295;local v296;local v297;while true do if ((((655 + 2243) -1070)<(3953 -((906 -(583 + 299)) + 7))) and (v293==(1 + 0))) then v296=nil;v297=nil;v293=734 -(96 + 636) ;end if ((2303<=(4667 -(120 + 152))) and (v293==(803 -(22 + 781)))) then local v304=725 -(88 + 637) ;while true do if (((1006 + 2693)==((24412 -9626) -11087)) and (v304==(1029 -(35 + 301 + 693)))) then v294=0;v295=nil;v304=1 -(1190 -(396 + 794)) ;end if (((16458 -11636)==(4990 -(78 + 90))) and ((1956 -((2036 -1111) + 1030))==v304)) then v293=3 -2 ;break;end end end if (((1892 -(1695 + 195))==v293) or (3818<(1025 -633))) then while true do if ((v294==(1 + 0 + 0)) or (1359<=981)) then v297=v295[3 -1 ];if (((v296==v78) and (v297>=v117)) or (((446 -(42 + 78)) -192)>(19868 -15443))) then local v313=0 + 0 ;local v314;local v315;while true do if (((3017 -(790 + 451))>=(4637 -2885)) and (v313==(0 + 0))) then v314=0;v315=nil;v313=1 + 0 ;end if ((3160<=4254) and ((1 + 0)==v313)) then while true do if (((1818 + 1274)>=(2265 + 507)) and ((0 -0)==v314)) then v315=465 -(377 + 88) ;while true do if (((1419 -(466 + 953))==v315) or ((1412 + 1917)<(1928 + 840))) then v118[v297]=v296[v297];v295[(1661 -(1498 + 162)) + 0 ]=v118;break;end end break;end end break;end end end break;end if (((6030 -3597)>317) and (v294==((0 -0) -0))) then local v310=0 -0 ;local v311;while true do if (((3886 -(570 + 1047))==(2067 + 202)) and (v310==(1938 -(1410 + 528)))) then v311=0;while true do if ((v311==(0 + 0)) or ((3309 -(1014 + 912))>(3586 + 160))) then local v322=0 -0 ;while true do if ((((3010 -2337) + 977)<(4059 -(30 + 337))) and (v322==(3 -2))) then v311=1;break;end if (((1138 + 29)<(1068 + 1111)) and (v322==0)) then v295=v235[v292];v296=v295[(904 -614) -(180 + 83 + 26) ];v322=1608 -(1369 + (331 -(27 + 66))) ;end end end if (((2941 + 1257)==(4255 -(34 + 23))) and ((4 -(14 -11))==v311)) then v294=1 + 0 ;break;end end break;end end end end break;end end end break;end end break;end end end break;end end break;end end end elseif ((v81<=5) or ((4460 -3433)>(1119 + 1094))) then if ((v81==(934 -(784 + 146))) or (((2339 -(206 + 1567)) -(218 + (833 -(638 + 108))))>(1644 -1111))) then v78[v80[(2 -1) + (551 -(187 + 363)) ]]();else v78[v80[5 -3 ]]=v78[v80[(2356 -(219 + 1170)) -(160 + 804) ]][v78[v80[13 -9 ]]];end elseif (((12800 -(9384 -(1225 + 343)))>(265 + 65)) and (v81>(1376 -(511 + 859)))) then local v121=0 + 0 ;local v122;local v123;while true do if ((4282>=(338 + 1529)) and ((0 -0)==v121)) then v122=v80[1 + 1 ];v123=v78[v80[2 + 1 ]];v121=4 -3 ;end if ((2552<=(61 + 29 + 3639)) and (v121==(1 + 0))) then v78[v122 + (221 -(56 + 164)) ]=v123;v78[v122]=v123[v80[15 -11 ]];break;end end else v78[v80[1 + 1 ]]=v80[270 -(39 + 228) ]~=(965 -(758 + 25 + 182)) ;end elseif ((v81<=(745 -(50 + 684))) or (4887<=(280 + 2457 + 415 + 245))) then if ((v81<=9) or (2755<=(1276 + 152 + 99))) then if ((229<=1204) and (v81>(19 -11))) then v78[v80[689 -(569 + 118) ]]=v30(v73[v80[399 -(155 + 241) ]],nil,v34);else v78[v80[1 + 1 ]][v80[12 -9 ]]=v78[v80[511 -(214 + 293) ]];end elseif ((1405>(1472 -(182 + (1753 -(252 + 1382))))) and (v81>10)) then v33[v80[3]]=v78[v80[1 + 1 ]];else local v130=0;local v131;local v132;local v133;while true do if (((5355 -2450)==2905) and (v130==((0 -0) -0))) then v131=0 -0 ;v132=nil;v130=1 + 0 ;end if (((3 -2)==v130) or ((7599 -4822)<=1585)) then v133=nil;while true do if ((v131==(1 + 0)) or (((2820 -1498) + 2522)>=(2177 + 1860))) then while true do if ((v132==(0 -0)) or ((5371 -(433 + 710))==(86 + 1028))) then v133=v80[2];v78[v133]=v78[v133](v13(v78,v133 + (1274 -(617 + 656)) ,v80[10 -(26 -19) ]));break;end end break;end if ((v131==(0 -0)) or ((10801 -7153)<(730 -251))) then v132=361 -(215 + 146) ;v133=nil;v131=1 -0 ;end end break;end end end elseif ((v81<=(12 + 1)) or ((5520 -(778 + 763))<2059)) then if ((1476<=(3753 -(1405 + 11))) and (v81==(28 -16))) then local v134=1891 -(1472 + 419) ;local v135;while true do if ((0==v134) or ((1 + 43)>=((1180 + 3536) -(354 + 754)))) then v135=v80[1137 -(1086 + 49) ];v78[v135]=v78[v135](v13(v78,v135 + 1 + (339 -(208 + 131)) ,v68));break;end end else v78[v80[2]]=v33[v80[508 -((1109 -761) + 157) ]];end elseif ((v81==(1020 -(561 + 445))) or ((4548 -(922 + 872))==1679)) then v78[v80[2 + 0 ]]=v80[3];else local v140=0;local v141;local v142;while true do if ((v140==(3 -2)) or ((1652 + 1872)>=(17920 -13374))) then while true do if (((803 + 168)<=(9247 -5446)) and (v141==(0 -0))) then v142=v80[5 -3 ];v78[v142]=v78[v142]();break;end end break;end if (((0 -0)==v140) or (964<(145 + 64))) then v141=0;v142=nil;v140=1 -0 ;end end end elseif (((1449 + 2711)>4002) and (v81<=((1437 -(75 + 1077)) -(64 + 198)))) then if ((v81<=(32 -13)) or (770>(6566 -(66 + 1662 + 29)))) then if ((v81<=(437 -(146 + 274))) or (((8122 -5828) + 2203)<(4214 -2505))) then if (((11272 -8907)<=(3107 -(4 + 11 + 61))) and (v81==(43 -27))) then local v143=0;local v144;local v145;local v146;while true do if (((718 + 28)<(2304 + 208 + 288)) and ((1015 -(936 + 79))==v143)) then v144=0;v145=nil;v143=1625 -(999 + 625) ;end if (((4948 -3410)>=(1945 -561)) and (v143==(417 -(59 + 357)))) then v146=nil;while true do if (((2458 -510)>(936 -(1424 -1020))) and (v144==(2 -1))) then while true do if (((18 + 990)<=(6700 -4040)) and (v145==(0 + 0))) then v146=v80[2 + (0 -0) ];v78[v146]=v78[v146](v78[v146 + (1 -0) ]);break;end end break;end if ((v144==0) or ((5645 -3176)>((1115 + 4211) -(1643 + 151)))) then local v220=0;while true do if (((3877 -(43 + 42))>=(1811 -948)) and (v220==(0 -(0 -0)))) then v145=0;v146=nil;v220=954 -(580 + 373) ;end if ((v220==((6 -4) -1)) or ((1129 -324)>=4832)) then v144=1 + 0 ;break;end end end end break;end end else v78[v80[1 + (930 -(768 + 161)) ]]=v78[v80[1109 -(710 + 396) ]];end elseif ((v81==(77 -59)) or (92==(1976 -(1084 + (219 -102))))) then local v149=905 -(609 + 296) ;local v150;local v151;local v152;local v153;while true do if ((2176==(3428 -(928 + 324))) and (v149==(1165 -(903 + 262)))) then v150=v80[2];v151,v152=v75(v78[v150](v13(v78,v150 + (2 -1) ,v80[8 -5 ])));v149=1 -0 ;end if ((v149==(1 -0)) or ((1361 + 2630)<=(2393 + 291))) then v68=(v152 + v150) -((2 + 0) -1) ;v153=(2508 -(1757 + 58)) -(42 + 651) ;v149=3 -(1 + 0) ;end if ((v149==(1 + 1)) or (((1064 -664) + 291)>(11621 -7071))) then for v201=v150,v68 do local v202=(0 -0) + 0 + 0 ;local v203;while true do if ((v202==((87 + 230) -(275 + 42))) or (((5354 -2085) -(1543 + 184))>(9788 -7303))) then v203=0 + 0 ;while true do if ((596<(3008 + 1239)) and (v203==(0 + 0))) then v153=v153 + 1 + 0 + 0 ;v78[v201]=v151[v153];break;end end break;end end end break;end end else local v154=0 -(848 -(518 + 330)) ;local v155;local v156;while true do if (((955 + (2818 -1526))==2247) and (v154==(1 + 0))) then while true do if ((0==v155) or ((1696 + 2617)==(1218 -(715 + 13)))) then v156=v80[2];v78[v156](v13(v78,v156 + 1 + 0 ,v80[1 + 2 ]));break;end end break;end if ((((7976 -6245) + 3114)>=(3942 -(131 + 184))) and (v154==(0 -0))) then v155=843 -(385 + 458) ;v156=nil;v154=688 -(629 + 58) ;end end end elseif (((9335 -5997)<(9652 -4682)) and (v81<=21)) then if ((v81==(1232 -(872 + 340))) or ((2270 -(268 + 230))>(1361 + 2091))) then local v157=0 + 0 ;local v158;local v159;local v160;local v161;local v162;local v163;while true do if ((v157==((2786 -(290 + 1047)) -(705 + 742))) or ((4980 -2588)>(12129 -9497))) then v162=nil;v163=nil;v157=14 -11 ;end if ((v157==(0 -0)) or (1685<513)) then v158=0 -0 ;v159=nil;v157=1 + 0 ;end if ((v157==(6 -3)) or ((679 -286)>=1364)) then while true do if ((v158==(3 -(701 -(675 + 26)))) or ((469 + 1141)==(1819 + 129))) then if (v163 or (1717<(667 + 176))) then local v238=0 + 0 ;while true do if ((v238==(0 -0)) or ((360 + 2087)==(1427 + 2229))) then v78[v161]=v163;v67=v80[12 -9 ];break;end end else v67=v67 + 1 ;end break;end if ((v158==2) or ((9978 -6120)==(2833 -(802 + 1010)))) then local v222=0 -0 ;local v223;while true do if ((v222==(0 + 0)) or ((10819 -8230)==((1677 -(639 + 1028)) + 10))) then v223=0 -0 ;while true do if (((617 + (844 -(64 + 1)))==(2799 -(336 + 1067))) and (v223==(0 + 0))) then for v289=1 + 0 ,v160 do v78[v161 + v289 ]=v162[v289];end v163=v162[1 + 0 ];v223=1 + 0 ;end if (((3640 -(140 + 142))==(3523 -(100 + 65))) and (v223==1)) then v158=1 + 2 ;break;end end break;end end end if ((v158==(1 + (0 -0))) or ((3529 -((636 -368) + 310))<=(1488 -773))) then local v224=1134 -(463 + 671) ;while true do if (((6618 -4004)>(40 + 72 + (969 -586))) and (v224==(1371 -(797 + 574)))) then local v247=0 -0 ;while true do if (((0 -0)==v247) or ((1990 + 430)<=((1236 + 1186) -(116 + 40)))) then v161=v159 + (3 -1) ;v162={v78[v159](v78[v159 + (2 -1) ],v78[v161])};v247=1274 -(123 + 1150) ;end if ((v247==1) or ((1750 -(209 + 166))>=(2042 -(61 + 100)))) then v224=18 -(13 + 4) ;break;end end end if (((5318 -(4255 -(578 + 782)))<=2677) and (v224==(252 -(223 + 28)))) then v158=4 -2 ;break;end end end if (((5873 -(1615 + 3))>(183 + 1112)) and (v158==(415 -(41 + 374)))) then local v225=0;while true do if ((((363 + 4388) -(477 + 312))==(470 + (3566 -(55 + 19)))) and (v225==(1 + 0))) then v158=1507 -(1143 + 363) ;break;end if ((v225==(0 -0)) or (1764>=(8613 -4335))) then local v248=0 + 0 ;while true do if ((v248==(0 + 0)) or ((302 + 3155)<=1246)) then v159=v80[2 -0 ];v160=v80[4];v248=1;end if ((4421==(15290 -10869)) and (v248==(1 + 0))) then v225=2 -1 ;break;end end end end end end break;end if (((4958 -(1434 + 93))==(1125 + 2306)) and (v157==(1 + 0))) then local v198=(1266 -(920 + 144)) -(105 + 97) ;while true do if ((2124>=(1551 -(438 + 1082))) and (0==v198)) then v160=nil;v161=nil;v198=1154 -(309 + 844) ;end if ((v198==(1 -0)) or ((3776 -1211)<=(538 + (578 -424)))) then v157=4 -2 ;break;end end end end elseif ((v80[774 -(426 + 346) ]==v78[v80[4]]) or (1176>(459 + 1698))) then v67=v67 + 1 ;else v67=v80[10 -7 ];end elseif ((1379<=(5282 -((16 -3) + 1794))) and (v81==(390 -(72 + 296)))) then v78[v80[2 + 0 ]]=v78[v80[1814 -(1344 + 467) ]][v80[1 + 3 ]];else do return;end end elseif (((144 + 2406)<((5088 -(362 + 186)) -(1435 + 509))) and (v81<=(1443 -(776 + 640)))) then if ((v81<=(71 -46)) or (((2544 -1593) + 379)==(3264 -(103 + 295)))) then if ((v81==(212 -(167 + 11 + 10))) or ((1298 -(359 + 78))>=(5935 -(696 + 242)))) then v78[v80[491 -(466 + 23) ]]=v34[v80[7 -4 ]];else local v168=0 -0 ;local v169;local v170;local v171;local v172;local v173;while true do if (((5657 -4164)<=(4511 + 402)) and (v168==((2172 -(153 + 546)) -(448 + 1025)))) then local v199=0;while true do if (((2430 -1606)<=2793) and (v199==(1 + 0))) then v168=801 -(494 + 306) ;break;end if (((6206 -4443)>404) and (v199==(0 -0))) then v169=0 -0 ;v170=nil;v199=1;end end end if ((2591==(3308 -(302 + (992 -577)))) and (((3 -2) + 0)==v168)) then v171=nil;v172=nil;v168=2 -0 ;end if (((1464 -(134 + 108))>=578) and (v168==(2 + 0))) then v173=nil;while true do if ((v169==(1919 -(71 + 1846))) or ((2308 -(841 + 220))<(1303 -(745 + 311)))) then for v236=v170,v68 do local v237=0 + 0 ;while true do if ((v237==((1876 -(1389 + 487)) + 0)) or ((5742 -3288)>=((8718 -2530) -(1227 + 149)))) then v173=v173 + (1316 -(1137 + 178)) ;v78[v236]=v171[v173];break;end end end break;end if (((3990 -2214)>(754 + 173)) and (v169==(1284 -(370 + 913)))) then local v226=0 + 0 + 0 ;local v227;while true do if (((2 + 1250)>=(650 + 101)) and (v226==(0 + 0))) then v227=1881 -(850 + (2882 -(162 + 1689))) ;while true do if ((v227==(1889 -((1470 -(122 + 80)) + 621))) or ((409 + 3743)<=3334)) then v68=(v172 + v170) -(1646 -(387 + 1258)) ;v173=0 + 0 ;v227=1 + 0 ;end if ((v227==(1 + 0)) or ((5047 -2137)<(2768 -(297 + 273)))) then v169=242 -(116 + 124) ;break;end end break;end end end if (((3972 -(1017 + 391))>((5559 -4142) -(2706 -(979 + 896)))) and (v169==(0 + 0))) then local v228=0 -0 ;while true do if ((v228==0) or ((1628 + 2376)<=(3058 -(164 + 862)))) then v170=v80[2];v171,v172=v75(v78[v170](v78[v170 + (464 -((658 -247) + 52)) ]));v228=1;end if ((v228==(1 + 0)) or ((12155 -7659)<(5550 -(15 + 1584)))) then v169=1;break;end end end end break;end end end elseif ((1226<(2426 + 250)) and (v81==(1382 -(254 + 1102)))) then if (v78[v80[2 + 0 ]] or ((1732 -691)>(83 + (8264 -5824)))) then v67=v67 + 1 ;else v67=v80[9 -(17 -11) ];end else v67=v80[1 + 2 ];end elseif ((v81<=(1169 -(1066 + 74))) or ((8074 -3968)==(10894 -6832))) then if ((931>(43 -23)) and (v81>((259 -135) -96))) then v78[v80[1 + 1 ]]={};else for v178=v80[2],v80[3 -0 ] do v78[v178]=nil;end end elseif ((v81<=(18 + 12)) or ((6074 -3360)==582)) then local v176=0 + 0 ;local v177;while true do if (((1049 + 82)>(1775 -830)) and (v176==(0 -0))) then v177=v80[2 + 0 ];v78[v177](v78[v177 + 1 + 0 ]);break;end end elseif (((4349 -2254)>=1542) and (v81>(1470 -(211 + 1228)))) then v78[v80[159 -(97 + 60) ]]=v78[v80[3]] -v80[4] ;else local v185=(1332 -637) -(180 + (1111 -(457 + 139))) ;local v186;local v187;local v188;local v189;while true do if ((v185==(0 + 0)) or ((1272 + 609)>=(15151 -10974))) then v186=0;v187=nil;v185=1 + 0 ;end if (((208 + 2559)<=(15268 -11798)) and (v185==2)) then while true do if ((v186==((357 -(264 + 91)) + 0)) or (3325<(858 -(34 + 301)))) then for v250=359 -(319 + 39) ,v80[2 + 2 ] do local v251=0;local v252;while true do if ((v251==(1 + 0)) or ((3597 -(238 + 236 + 42))==((2068 + 690) -(3499 -2295)))) then if (((1371 + 2535)>(538 + 395)) and (v252[1]==(55 -38))) then v189[v250-(1188 -(1015 + 172)) ]={v78,v252[4 -1 ]};else v189[v250-(2 -(1 + 0)) ]={v33,v252[937 -(882 + (170 -(45 + 73))) ]};end v77[ #v77 + 1 ]=v189;break;end if ((v251==(162 -(51 + 111))) or (671==((9523 -6116) -(642 + (680 -349))))) then v67=v67 + 1 ;v252=v72[v67];v251=1;end end end v78[v80[2 -0 ]]=v30(v187,v188,v34);break;end if (((2579 + 288)<(5226 -(39 + 392))) and (v186==(1032 -(908 + 124)))) then v187=v73[v80[6 -(6 -3) ]];v188=nil;v186=2 -1 ;end if ((v186==1) or (146>(2677 -1381))) then local v241=0;while true do if (((3921 + 913)==(3175 + 1659)) and (v241==(2 -1))) then v186=2 + 0 ;break;end if ((176<(9453 -5566)) and ((1316 -(181 + 1135))==v241)) then v189={};v188=v10({},{__index=function(v263,v264)local v281=0 + 0 ;local v282;local v283;while true do if ((v281==(0 -0)) or ((3255 -(473 + 517))<(1940 -(997 + 484)))) then local v300=0 + 0 ;while true do if ((v300==((2 + 0) -1)) or (2219>=3925)) then v281=3 -2 ;break;end if (((604 + 308)==(2191 -(1153 + (222 -96)))) and (v300==0)) then v282=0 -0 ;v283=nil;v300=1 -0 ;end end end if ((v281==1) or ((5734 -(649 + 1179))>4151)) then while true do if ((v282==(0 + 0)) or ((4964 -(175 + 1150))<=(7800 -(2422 + 2349)))) then local v307=1290 -(222 + 227 + 841) ;local v308;while true do if ((v307==(0 -0)) or ((1870 + 311)<=(2010 -(1294 + 548)))) then v308=1708 -((2087 -(75 + 778)) + 474) ;while true do if ((v308==(0 + 0)) or ((4836 -(46 + 272 + 116))==1917)) then v283=v189[v264];return v283[1 + 0 ][v283[2]];end end break;end end end end break;end end end,__newindex=function(v263,v264,v265)local v284=1460 -(853 + 607) ;local v285;while true do if ((v284==(0 -(0 + 0))) or ((2280 -1591)==(3324 -(1619 + 50)))) then v285=v189[v264];v285[1 -0 ][v285[5 -3 ]]=v265;break;end end end});v241=2 -1 ;end end end end break;end if ((3236>(924 + 25)) and (v185==(1 + 0))) then v188=nil;v189=nil;v185=5 -3 ;end end end v67=v67 + 1 ;break;end if ((715<=(17259 -12310)) and (0==v87)) then local v98=0 -0 ;while true do if (((5288 -(857 + 420))>2413) and (v98==(1 -0))) then v87=1;break;end if ((((1521 -(1021 + 285)) + (2363 -724))<=(5948 -(316 + 1285))) and (v98==(954 -(469 + 485)))) then v80=v72[v67];v81=v80[1 + 0 ];v98=4 -(1099 -(926 + 170)) ;end end end end end end A,B=v28(v11(v71));if  not A[1] then local v88=v32[4][v67] or "?" ;error("Script error at ["   .. v88   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end;return v30(v29(),{},v17)(...);end if (v18==1) then v21=function(v35,v36,v37)if v37 then local v82=(v35/((1492 -(1049 + 441))^(v36-(1 + 0))))%(((751 + 109) -(545 + 313))^(((v37-(202 -(130 + 71))) -(v36-((1927 -592) -((1356 -(82 + 574)) + 634)))) + (587 -(115 + 471)))) ;return v82-(v82%((8 -5) -2)) ;else local v83=(3 -1)^(v36-(1 + 0)) ;return (((v35%(v83 + v83))>=v83) and (570 -(177 + 392))) or (1271 -(414 + 857)) ;end end;v22=nil;v22=function()local v60=v1(v16,v19,v19);v19=v19 + 1 ;return v60;end;v23=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v38)if (v1(v38,2)==79) then v20=v0(v3(v38,1,1));return "";else local v84=0;local v85;while true do if (v84==0) then v85=v2(v0(v38,16));if v20 then local v102=0;local v103;while true do if (0==v102) then v103=v5(v85,v20);v20=nil;v102=1;end if (v102==1) then return v103;end end else return v85;end break;end end end end);v21=nil;v18=1;end if (v18==2) then v23=function()local v61,v62=v1(v16,v19,v19 + 1 + 1 );v19=v19 + (3 -1) ;return (v62 * (707 -451)) + v61 ;end;v24=nil;v24=function()local v63,v64,v65,v66=v1(v16,v19,v19 + (859 -(175 + 17 + 664)) );v19=v19 + (373 -(280 + 89)) ;return (v66 * (30178949 -13401733)) + (v65 * 65536) + (v64 * 256) + v63 ;end;v25=nil;v18=3;end end end vv9(),...);end
