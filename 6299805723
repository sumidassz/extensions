game.Players.LocalPlayer.PlayerGui.MainGui.SendMessage:Fire("sTempestHUB opening in 3 seconds!", true)
local Library = loadstring(game:HttpGet('https://pastebin.com/raw/qYTfV8u7'))()

local Window = Library:CreateWindow({
    Title = 'sTempestHub | [UPDATE 37] Anime Fighters Simulator',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Main = Window:AddTab('Main'),
    TDR = Window:AddTab('Auto Trial/Dungeon/Raid')
}

local autoFarmGroupBox = Tabs.Main:AddLeftGroupbox('Auto Farm')
local miscGroupBox = Tabs.Main:AddLeftGroupbox('Misc')
local autoEggGroupBox = Tabs.Main:AddRightGroupbox('Auto Eggs')
local autoTrialGroupBox = Tabs.TDR:AddLeftGroupbox('Auto Dungeon')
local autoRaidGroupBox = Tabs.TDR:AddRightGroupbox('Auto Raid')

-- MAIN

local mobArrayTable = {}
local teamsListArray = {}
local raidListArray = {}

local function mobDropdown(dropdown)
	table.clear(mobArrayTable)
	for i, k in pairs(workspace.Worlds[tostring(game.Players.LocalPlayer.World.Value)].Enemies:GetChildren()) do
		if k:FindFirstChild("DisplayName") then
			if not table.find(mobArrayTable, k.DisplayName.Value) then
				table.insert(mobArrayTable, k.DisplayName.Value)
				dropdown:SetValues(mobArrayTable)
			end
		end
	end
end
local function teamsDropdown(dropdown)
	table.clear(teamsListArray)
	for _, v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.Pets.TeamsList.Main.Scroll:GetChildren()) do
		if v.Name == "TeamTemplate" and v:FindFirstChild("TeamName") then
			if not table.find(teamsListArray, v.TeamName.Name) then
				table.insert(teamsListArray, v.TeamName.Text)
				dropdown:SetValues(teamsListArray)
			end
		end
	end
end
local function raidDropdown(dropdown)
	table.clear(raidListArray)
	for _, v in pairs(workspace.Worlds:GetChildren()) do
		if v:FindFirstChild("RaidBeacon") then
			if not table.find(raidListArray, v.Name) then
				table.insert(raidListArray, v.Name)
				dropdown:SetValues(raidListArray)
			end
		end
	end
end

autoFarmGroupBox:AddToggle('AutoFarmToggle', {
    Text = 'Auto Farm',
    Default = false,
    Tooltip = 'Enable/Disabled auto farm',
})

autoFarmGroupBox:AddToggle('withTPToggle', {
    Text = 'with TP',
    Default = false,
    Tooltip = 'Enable/Disabled tp in auto farm',
})

autoFarmGroupBox:AddDropdown('autoFarmDropdown', {

    Values = mobArrayTable,
    Default = 1, 
    Multi = true,

    Text = 'Choose the enemy',
    Tooltip = 'You can choose multiples enemys',
})

autoFarmGroupBox:AddButton('Refresh the enemies', function()
    mobDropdown(Options.autoFarmDropdown)
end)

autoFarmGroupBox:AddToggle('AttackEverythingToggle', {
    Text = 'Attack Everything',
    Default = false,
    Tooltip = 'Enable/Disabled attack everything',
})

autoTrialGroupBox:AddToggle('AutoDungeonToggle', {
    Text = 'Auto Dungeon',
    Default = false,
    Tooltip = 'Enable/Disabled auto dungeon',
})

autoTrialGroupBox:AddToggle('IgnoreChestsToggle', {
    Text = 'Ignore Chests',
    Default = false,
    Tooltip = 'Enable/Disabled ignore chests in auto dungeon!',
})

autoTrialGroupBox:AddDropdown('equipTeamDungeonDropdown', {

    Values = teamsListArray,
    Default = 1, 
    Multi = false,

    Text = 'Choose the team to "kill" chests',
    Tooltip = 'Choose the team to kill the chests',
})

autoTrialGroupBox:AddButton('Refresh the teams', function()
    teamsDropdown(Options.equipTeamDungeonDropdown)
end)

autoRaidGroupBox:AddToggle('AutoRaidToggle', {
    Text = 'Auto Raid',
    Default = false,
    Tooltip = 'Enable/Disabled auto raid!',
})

autoRaidGroupBox:AddDropdown('raidsToDoDropdown', {

    Values = raidListArray,
    Default = 1, 
    Multi = true,

    Text = 'Choose the worlds to do raid',
    Tooltip = 'Choose the worlds to do raid',
})
local worldSaved = "DemonSlayer2"
autoRaidGroupBox:AddButton('Save Position and World', function()
    worldSaved = tostring(game.Players.LocalPlayer.World.Value)
end)

raidDropdown(Options.raidsToDoDropdown)

miscGroupBox:AddToggle('AutoQuestToggle', {
    Text = 'Auto Quest',
    Default = false,
    Tooltip = 'Enable/Disabled auto quest',
})

miscGroupBox:AddToggle('AutoClickToggle', {
    Text = 'Auto Click',
    Default = false,
    Tooltip = 'Enable/Disabled auto click',
})

miscGroupBox:AddToggle('AutoCollectToggle', {
    Text = 'Auto Collect',
    Default = false,
    Tooltip = 'Enable/Disabled auto collect',
})

autoEggGroupBox:AddToggle('autoEggOpenToggle', {
    Text = 'Auto Egg',
    Default = false,
    Tooltip = 'Enable/Disabled auto collect',
})

autoEggGroupBox:AddToggle('autoMaxOpenToggle', {
    Text = 'Auto Max Open',
    Default = false,
    Tooltip = 'Enable/Disabled auto collect',
})

mobDropdown(Options.autoFarmDropdown)
teamsDropdown(Options.equipTeamDungeonDropdown)
local function getNearestForFarm(world, array)
    local dist, thing = math.huge
    for i, v in next, workspace.Worlds[tostring(world)].Enemies:GetChildren() do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Health") and tonumber(v.Health.Value) > 0 and v:FindFirstChild("DisplayName") and table.find(array, v.DisplayName.Value) then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local function autoMobFunc(plr, array, acb, tpb)
	if plr.Character:FindFirstChild("HumanoidRootPart") then
		for i, v in pairs(workspace.Worlds[tostring(plr.World.Value)].Enemies:GetChildren()) do
			if v:IsA("Model") and v:FindFirstChild("Health") and v.Health.Value > 0 and v:FindFirstChild("DisplayName") and table.find(array, v.DisplayName.Value) then
				for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
					if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data:FindFirstChild("Attacking") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
						game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForFarm(plr.World.Value, array), false);
					end
				end	
				if acb == true then game:GetService("ReplicatedStorage").Remote.ClickerDamage:FireServer() end
				if tpb == true and (plr.Character.HumanoidRootPart.Position-getNearestForFarm(plr.World.Value, array).HumanoidRootPart.Position).magnitude > 15 then plr.Character.HumanoidRootPart.CFrame = getNearestForFarm(plr.World.Value, array).HumanoidRootPart.CFrame end
			end
		end
	end
end
local function getNearestForQuest(world, mob)
    local dist, thing = math.huge
    for i, v in next, workspace.Worlds[tostring(world)].Enemies:GetChildren() do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Health") and tonumber(v.Health.Value) > 0 and v.Name == mob then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local function questFunc(plr)
	for i, v in pairs(workspace.Worlds[tostring(plr.World.Value)].Enemies:GetChildren()) do
		if v:FindFirstChild("DisplayName") and plr.PlayerGui.MainGui.Quest.Objectives:FindFirstChild("QuestText") then
			local a = string.match(string.sub(plr.PlayerGui.MainGui.Quest.Objectives.QuestText.Text, 2,3), "%d+")
			local b = string.match(string.sub(plr.PlayerGui.MainGui.Quest.Objectives.QuestText.Text, 4,6), "%d+")
			if tonumber(a) == tonumber(b) then
				game.ReplicatedStorage.Remote.FinishQuest:FireServer(workspace.Worlds[game.Players.LocalPlayer.World.Value][game.Players.LocalPlayer.World.Value])
				game.ReplicatedStorage.Remote.StartQuest:FireServer(workspace.Worlds[game.Players.LocalPlayer.World.Value][game.Players.LocalPlayer.World.Value])
				game.ReplicatedStorage.Remote.FinishQuestline:FireServer(workspace.Worlds[game.Players.LocalPlayer.World.Value][game.Players.LocalPlayer.World.Value])
			end
			if "["..tostring(a).."/"..tostring(b).."] "..tostring(v.DisplayName.Value) == tostring(game.Players.LocalPlayer.PlayerGui.MainGui.Quest.Objectives.QuestText.Text) then
				--if string.sub(plr.PlayerGui.MainGui.Quest.Objectives.QuestText.Text, 2,2) == string.sub(plr.PlayerGui.MainGui.Quest.Objectives.QuestText.Text, 4,4) then end
				if v:IsA("Model") and v:FindFirstChild("Health") and v.Health.Value > 0 and v == getNearestForQuest(plr.World.Value, v.Name) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNearestForQuest(plr.World.Value, v.Name).HumanoidRootPart.CFrame
					for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
						if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
							game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForQuest(plr.World.Value, v.Name), false);
						end
					end	
					game:GetService("ReplicatedStorage").Remote.ClickerDamage:FireServer()
				end
			end
		end
	end
end
local function getNearestForAttackEverything(world)
    local dist, thing = math.huge
    for i, v in next, workspace.Worlds[tostring(world)].Enemies:GetChildren() do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Health") and tonumber(v.Health.Value) > 0 and v:FindFirstChild("DisplayName") then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local function attackEverythingFunc(plr, wantChest, tpb)
	if plr.Character:FindFirstChild("HumanoidRootPart") then
		for i, v in pairs(workspace.Worlds[tostring(plr.World.Value)].Enemies:GetChildren()) do
			if wantChest == false then
				if v:IsA("Model") and v:FindFirstChild("Health") and v.Health.Value > 0 and v == getNearestForAttackEverything(plr.World.Value) then
					if tpb == true then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNearestForAttackEverything(plr.World.Value).HumanoidRootPart.CFrame end
					for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
						if k:IsA("Model") and k:FindFirstChild("Data") then
							if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data:FindFirstChild("Attacking") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
								game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForAttackEverything(plr.World.Value), false);
							end
						end
					end	
				end
			elseif wantChest == true then
				if v:IsA("Model") and v.Name ~= "Chest" and v:FindFirstChild("Health") and v.Health.Value > 0 and v == getNearestForAttackEverything(plr.World.Value) then
					if tpb == true then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNearestForAttackEverything(plr.World.Value).HumanoidRootPart.CFrame end
					for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
						if k:IsA("Model") and k:FindFirstChild("Data") then
							if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data:FindFirstChild("Attacking") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
								game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForAttackEverything(plr.World.Value), false);
							end
						end
					end	
				end
			end
		end
	end
end
local function collectAllFunc()
	for i, v in pairs(workspace.Effects:GetChildren()) do
		if v:FindFirstChild("Base") then
			v.PrimaryPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
		end
	end
end
local function getNearestForDungeon()
    local dist, thing = math.huge
    for i, v in next, workspace.Worlds.Dungeon.Enemies:GetChildren() do
        if v:FindFirstChild("Health") and tonumber(v.Health.Value) > 0 and v:FindFirstChild("DisplayName") then
            local mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v:GetPivot().Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local function autoEquipTeamFunc(equipName)
    for _,v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.Pets.TeamsList.Main.Scroll:GetChildren()) do
        if v:IsA("Frame") and v:FindFirstChild("TeamName") and v.TeamName.Text == tostring(equipName) then
            firesignal(v.Button.Activated)
        end
    end
end
local function autoDungeonFunc(plr, wantChest, equipName)
    for i,v in pairs(game.Workspace.Worlds.Dungeon:GetDescendants()) do
	if v:IsA("Part") and v:FindFirstChild("ProximityPrompt") then
	    fireproximityprompt(v.ProximityPrompt)
	    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(0,2,0)
	end
	if v:IsA("Part") and v:FindFirstChild("DungeonRoomDoorRemotePrompt") then
		if v.Color == Color3.new(206, 46, 31) and game.Players.LocalPlayer.PlayerGui.DungeonMinimap.Key.Image == "rbxassetid://10021319916" then
			return
		elseif v.Color == Color3.new(206, 46, 31) and game.Players.LocalPlayer.PlayerGui.DungeonMinimap.Key.Image ~= "rbxassetid://10021319916" then
	    		fireproximityprompt(v.DungeonRoomDoorRemotePrompt)
	    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(0,2,0)
		elseif v.Color ~= Color3.new(206, 46, 31) then
	    		fireproximityprompt(v.DungeonRoomDoorRemotePrompt)
	    		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(0,2,0)
		end
	end
    end
    if plr.Character:FindFirstChild("HumanoidRootPart") then
		for i, v in pairs(workspace.Worlds["Dungeon"].Enemies:GetChildren()) do
			if wantChest == false then
				if v:IsA("Model") and v:FindFirstChild("Health") and v.Health.Value > 0 and v == getNearestForDungeon() then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNearestForDungeon():GetPivot()
					for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
						if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data:FindFirstChild("Attacking") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
							game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForDungeon(), false);
						end
					end	
				end
                if v:IsA("Model") and v.Name == "Chest" and v:FindFirstChild("Health") and v.Health.Value > 0 and v == getNearestForDungeon() then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNearestForDungeon():GetPivot()
                    autoEquipTeamFunc(equipName)
					for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
						if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data:FindFirstChild("Attacking") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
							game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForDungeon(), false);
						end
					end	
				end
			elseif wantChest == true then
				if v:IsA("Model") and v.Name ~= "Chest" and v:FindFirstChild("Health") and v.Health.Value > 0 and v == getNearestForDungeon() then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getNearestForDungeon():GetPivot()
					for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
						if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data:FindFirstChild("Attacking") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
							game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForDungeon(), false);
						end
					end	
				end
			end
		end
	end
end
local function getNearestForRaid(max)
    local dist, thing = math.huge
    for i, v in next, workspace.Worlds["Raid"].Enemies:GetChildren() do
        if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Health") and v:FindFirstChild("MaxHealth") and tonumber(v.Health.Value) > 0 and tonumber(v.MaxHealth.Value) ~= max then
            local mag =
                (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
            if mag < dist then
                dist = mag
                thing = v
            end
        end
    end
    return thing
end
local function autoRaidFunc(array, world)
    local bossMaxHealth = workspace.Worlds.Raid.RaidData.BossMaxHealth
    local currentWorld = workspace.Worlds.Raid.RaidData.CurrentWorld
    local timeLeft = workspace.Worlds.Raid.RaidData.TimeLeft
    local forcefield = workspace.Worlds.Raid.RaidData.Forcefield
    if timeLeft.Value > 0 and timeLeft.Value < 30 and table.find(array, currentWorld.Value) then
        if game.Players.LocalPlayer.World.Value ~= "Raid" then
            game.ReplicatedStorage.Bindable.AttemptTravel:Fire("Raid")
            for b,y in pairs(getconnections(game.Players.LocalPlayer.PlayerGui.MainGui.RaidTransport.Main.Yes.Activated)) do y.Function() end
        end
    end
    for i, enemie in pairs(workspace.Worlds.Raid.Enemies:GetChildren()) do
        if #workspace.Worlds.Raid.Enemies:GetChildren() >= 2 then
            for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
                if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
            	    if enemie:FindFirstChild("MaxHealth") and bossMaxHealth.Value ~= enemie.MaxHealth.Value and workspace.Worlds.Raid.Enemies:FindFirstChild(tostring(getNearestForRaid(bossMaxHealth.Value))) then
                        game.Players.LocalPlayer.Character:PivotTo(getNearestForRaid(bossMaxHealth.Value):GetPivot())
                        game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForRaid(bossMaxHealth.Value), false);
                    end
                end
            end
        elseif #workspace.Worlds.Raid.Enemies:GetChildren() == 1 then
            if enemie:FindFirstChild("MaxHealth") and bossMaxHealth.Value == enemie.MaxHealth.Value and workspace.Worlds.Raid.Enemies:FindFirstChild(tostring(getNearestForRaid(bossMaxHealth.Value))) then
                game.Players.LocalPlayer.Character:PivotTo(getNearestForRaid(1):GetPivot())
                for _,k in pairs(game:GetService("Workspace").Pets:GetChildren()) do
                    if k:FindFirstChild("Data") and k.Data:FindFirstChild("Owner") and k.Data.Owner.Value == game.Players.LocalPlayer and not k.Data.Attacking.Value then
                        game.ReplicatedStorage.Bindable.SendPet:Fire(getNearestForRaid(1), false);
                    end
                end	
            end
            if forcefield.Value == true then
                game.ReplicatedStorage.Bindable.WithdrawPets:Fire(enemie);
            end
        end
    end
    if #workspace.Worlds.Raid.Enemies:GetChildren() < 1 then
        if game.Players.LocalPlayer.PlayerGui.RaidGui.RaidResults.Visible == true then
            game.ReplicatedStorage.Bindable.AttemptTravel:Fire(tostring(world))
            wait(0.1)
            for t,q in pairs(getconnections(game.Players.LocalPlayer.PlayerGui.RaidGui.RaidResults.Confirm.Activated)) do q.Function() end
        end
    end
end
local function getEgg(world)
	if world == "DemonSlayer" then return "DemonEgg" end
	if world == "BlackClover" then return "BCEgg" end
	if world == "TokyoGhoul" then return "GhoulEgg" end
	if world == "DBZ" then return "GokuEgg" end
	if world == "Tower" or world == "Titan" or world == "TimeChamber" or world == "MLP" or world == "Raid" then return nil end
	return tostring(world).."Egg"
end
local function getManyEggs()
    for i, v in pairs(game.Players.LocalPlayer.PlayerGui.MainGui.Multipliers.List:GetChildren()) do
        if v.Name == "MultTemplate" and v:FindFirstChild("Value") and v:FindFirstChild("Title") and v.Title.Text == "Opens:" then
            return v.Value.Text
        end
    end
end
local function autoEggFunc() if getEgg(game.Players.LocalPlayer.World.Value) ~= nil then game.ReplicatedStorage.Remote.OpenEgg:InvokeServer(workspace.Worlds:FindFirstChild(tostring(game.Players.LocalPlayer.World.Value))[getEgg(game.Players.LocalPlayer.World.Value)], tonumber(getManyEggs())) end end
local function autoMaxOpenFunc() game.ReplicatedStorage.Remote.AttemptMultiOpen:FireServer(getEgg(game.Players.LocalPlayer.World.Value)) end

local mobsArraySelected = {}
table.clear(mobsArraySelected)
Options.autoFarmDropdown:OnChanged(function()
	table.clear(mobsArraySelected)
    for key, value in next, Options.autoFarmDropdown.Value do
        if not table.find(mobsArraySelected, key) then
        	table.insert(mobsArraySelected, key)
        end
    end
end)

local rworldArraySelected = {}
table.clear(rworldArraySelected)
Options.raidsToDoDropdown:OnChanged(function()
    table.clear(rworldArraySelected)
    for key, value in next, Options.raidsToDoDropdown.Value do
        if not table.find(rworldArraySelected, key) then
        	table.insert(rworldArraySelected, key)
        end
    end
end)

local c1 = coroutine.create(function() while true do if Toggles.AutoFarmToggle.Value == true then autoMobFunc(game.Players.LocalPlayer, mobsArraySelected, Toggles.withTPToggle.Value) end wait() end end) coroutine.resume(c1)
local c2 = coroutine.create(function() while true do if Toggles.AutoClickToggle.Value == true then game:GetService("ReplicatedStorage").Remote.ClickerDamage:FireServer() end wait() end end) coroutine.resume(c2)
local c3 = coroutine.create(function() while true do if Toggles.AutoCollectToggle.Value == true then collectAllFunc() end wait(0.1) end end) coroutine.resume(c3)
local c4 = coroutine.create(function() while true do if Toggles.autoEggOpenToggle.Value == true then autoEggFunc() end wait(0.1) end end) coroutine.resume(c4)
local c5 = coroutine.create(function() while true do if Toggles.autoMaxOpenToggle.Value == true then autoMaxOpenFunc() end wait(0.1) end end) coroutine.resume(c5)
local c6 = coroutine.create(function() while true do if Toggles.AttackEverythingToggle.Value == true then attackEverythingFunc(game.Players.LocalPlayer, Toggles.IgnoreChestsToggle.Value, Toggles.withTPToggle.Value) end wait() end end) coroutine.resume(c6)
local c7 = coroutine.create(function() while true do if Toggles.AutoQuestToggle.Value == true then questFunc(game.Players.LocalPlayer) end wait() end end) coroutine.resume(c7)
local c8 = coroutine.create(function() while true do if Toggles.AutoDungeonToggle.Value == true then autoDungeonFunc(game.Players.LocalPlayer, Toggles.IgnoreChestsToggle.Value, Options.equipTeamDungeonDropdown.Value) end wait() end end) coroutine.resume(c8)
local c9 = coroutine.create(function() while true do if Toggles.AutoRaidToggle.Value == true then autoRaidFunc(rworldArraySelected, worldSaved) end wait() end end) coroutine.resume(c9)

wait(1.5)

local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)
game.Players.LocalPlayer.PlayerGui.MainGui.SendMessage:Fire("Anti AFK activated!", true)
--local peopleBanned = {"Barneizinho_OFC", "gabretop789"}
local peopleBanned = {}
if table.find(peopleBanned, game.Players.LocalPlayer.Name) then game.Players.LocalPlayer:Kick("You have been banned from sTempest! You can pay for an unban!") end
